name: "Check codes"

on:
  pull_request:
  push:
    branches:
      # - "nothing"
      - "master"
  workflow_dispatch:

permissions:
  contents: "read"

jobs:
  golangci-lint:
    name: "Check coding style"
    runs-on: "ubuntu-latest"
    timeout-minutes: 5
    steps:
      - uses: "actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8" # v5.0.0

      - uses: "golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9" # v8.0.0
        with:
          version: "latest"

  scan-vulnerabilities:
    uses: "./.github/workflows/scan-vulnerabilities.yaml"

  spell-check:
    name: "Check spell"
    runs-on: "ubuntu-latest"
    timeout-minutes: 5
    steps:
      - uses: "actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8" # v5.0.0

      - name: "Run spell check"
        run: "make spell-check"

  testing:
    name: "Unit Test"
    runs-on: "ubuntu-latest"
    timeout-minutes: 5
    strategy:
      matrix:
        go:
          - "1.24"
          - "1.25"
    steps:
      - uses: "actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8" # v5.0.0

      - uses: "actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00" # v6.0.0
        with:
          go-version: "${{ matrix.go }}"

      - name: "Run tests"
        run: "make test-json > result.json"

      - name: "Annotate tests"
        if: "${{ always() }}"
        uses: "guyarb/golang-test-annotations@2941118d7ef622b1b3771d1ff6eae9e90659eb26" # v0.8.0
        with:
          test-results: "result.json"
