name: "Check codes"

on:
  pull_request:
  push:
    branches:
      # - "nothing"
      - "master"
  workflow_dispatch:

jobs:
  golangci-lint:
    name: "Check coding style"
    runs-on: "ubuntu-latest"
    timeout-minutes: 5
    steps:
      - uses: "actions/checkout@v3"

      - uses: "golangci/golangci-lint-action@v3"
        with:
          version: "latest"

  scan-vulnerabilities:
    name: "Scan Vulnerabilities"
    runs-on: "ubuntu-latest"
    timeout-minutes: 5
    steps:
      - uses: "actions/checkout@v3"

      - uses: "actions/setup-go@v3"
        with:
          go-version: "1.19"

      - name: "Write go.list file"
        run: "go list -json -m all > go.list"

      - uses: "sonatype-nexus-community/nancy-github-action@main"

  spell-check:
    name: "Check spell"
    runs-on: "ubuntu-latest"
    timeout-minutes: 5
    steps:
      - uses: "actions/checkout@v3"

      - uses: "actions/setup-node@v3"
        with:
          node-version: "16.x"

      - name: "Install cSpell"
        run: "npm install -g cspell"

      - name: "Run spell check"
        run: "make spell-check"

  testing:
    name: "Unit Test"
    runs-on: "ubuntu-latest"
    timeout-minutes: 5
    strategy:
      matrix:
        go:
          - "1.16"
          - "1.17"
          - "1.18"
          - "1.19"
    steps:
      - uses: "actions/checkout@v3"

      - uses: "actions/setup-go@v3"
        with:
          go-version: "${{ matrix.go }}"

      - name: "Get GOMODCACHE directory path"
        id: "gomodcache-dir-path"
        run: |
          GOMODCACHE=$(go env GOPATH)/pkg/mod
          echo "dir=$GOMODCACHE" >> $GITHUB_OUTPUT

      - name: "Cache GOMODCACHE directory"
        uses: "actions/cache@v3"
        # use this to check for `cache-hit`
        # `steps.gomodcache-dir.outputs.cache-hit != 'true'`
        id: "gomodcache-dir"
        with:
          path: "${{ steps.gomodcache-dir-path.outputs.dir }}"
          key: "${{ runner.os }}-${{ matrix.go }}-${{ hashFiles(format('{0}{1}', github.workspace, '/go.sum')) }}"
          restore-keys: "${{ runner.os }}-${{ matrix.go }}-"

      - name: "Run tests"
        run: "make test-json > result.json"

      - name: "Annotate tests"
        if: "always()"
        uses: "guyarb/golang-test-annotations@v0.6.0"
        with:
          test-results: "result.json"
